function e(){let e={"*":[]},t={},n=new Set,o=!1,c="";return{on:function(t,n){e[t]||(e[t]=[]),e[t].push(n)},once:function(e,n){"*"!==e&&(t[e]||(t[e]=[]),t[e].push(n))},off:function(n,o){if(o)return e[n]&&(e[n]=e[n].filter((e=>e!==o))),t[n]&&(t[n]=t[n].filter((e=>e!==o))),e[n]&&0===e[n].length&&delete e[n],void(t[n]&&0===t[n].length&&delete e[n]);t[n]&&delete t[n],e[n]&&delete e[n]},reset:function(){e={"*":[]},t={},n=new Set},emit:function(){const[f,...l]=arguments;function s(t){let o=!1;"*"!==t&&(n.has(t)||(e[t].every((e=>{const t=e(...l);return"string"!=typeof t||("STOP"!==t.toUpperCase()||(o=!0,!1))})),o||e["*"].forEach((e=>e(f,...l)))))}if(o&&(console.log(`${c} Event "${f}" was triggered.`),l.length>0&&(console.log("Arguments:"),console.log(...l),console.log("^----"))),"*"!==f){if(t[f]){if(n.has(f))return;t[f].forEach((e=>e(...l))),delete t[f]}e[f]&&s(f)}else{Object.keys(e).forEach((e=>s(e)))}},stop:function(o){if("*"!==o)n.add(o);else{const o=Object.keys(e),c=Object.keys(t);n=new Set([...c,...o])}},start:function(e){"*"!==e?n.delete(e):n.clear()},debug:function(e,t){o=!!e,t&&"string"==typeof t&&(c=t)}}}export{e as default};
